{"version":3,"sources":["components/AccordionItem/AccordionItem.js","App.js","components/Titles/titles.js","components/Contents/contents.js","reportWebVitals.js","index.js"],"names":["AccordionItem","title","content","useState","active","setActive","maxHeight","setMaxHeight","contentRef","useRef","className","onClick","current","scrollHeight","ref","style","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAGMA,EAAgB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAAc,EAChBC,oBAAS,GADO,mBACrCC,EADqC,KAC7BC,EAD6B,OAEVF,mBAAS,OAFC,mBAErCG,EAFqC,KAE1BC,EAF0B,KAGtCC,EAAaC,iBAAO,MAO1B,OACE,sBAAKC,UAAU,kBAAf,UACE,qBACEA,UACEN,EAAS,gCAAkC,yBAE7CO,QAXgB,WACpBN,GAAWD,GACXG,EAAaH,EAAS,MAAH,UAAcI,EAAWI,QAAQC,aAAjC,QAKjB,SAMGZ,IAEH,qBAAKS,UAAU,uBAAuBI,IAAKN,EAAYO,MAAO,CAAET,UAAU,GAAD,OAAKA,IAA9E,SACE,qBAAKI,UAAU,gCAAf,SAAgDR,UASxDF,EAAcgB,aAAe,CAC3Bf,MAAO,2BACPC,QACE,uPAEWF,QClBAiB,EAfH,WACV,OACE,qCACE,qCACA,sBAAKP,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAeT,MCXD,gBDWgBC,QEXd,0eFYhB,cAAC,EAAD,CAAeD,MCXD,sBDWgBC,QEVd,4YFWhB,cAAC,EAAD,CAAeD,MCXD,iBDWgBC,QETd,idFUhB,cAAC,EAAD,CAAeD,MCXD,mBDWgBC,QERd,kRCMTgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.8086e946.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AccordionItem = ({ title, content }) => {\r\n  const [active, setActive] = useState(false);\r\n  const [maxHeight, setMaxHeight] = useState(\"0px\");\r\n  const contentRef = useRef(null);\r\n\r\n  const toggleContent = () => {\r\n    setActive(!active)\r\n    setMaxHeight(active ? \"0px\" : `${contentRef.current.scrollHeight}px`)\r\n  };\r\n\r\n  return (\r\n    <div className=\"accordion__item\">\r\n      <div\r\n        className={\r\n          active ? \"accordion__item-header active\" : \"accordion__item-header\"\r\n        }\r\n        onClick={toggleContent}\r\n      >\r\n        {title}\r\n      </div>\r\n      <div className=\"accordion__item-body\" ref={contentRef} style={{ maxHeight: `${maxHeight}` }}>\r\n        <div className=\"accordion__item-body--content\">{content}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nAccordionItem.propTypes = {\r\n  title: PropTypes.string,\r\n  content: PropTypes.string,\r\n};\r\nAccordionItem.defaultProps = {\r\n  title: \"What is Web Development?\",\r\n  content:\r\n    \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Mollitia voluptatum. Blanditiis, similique fugit cupiditate impedit dignissimos ab pariatur alias minima quod architecto optio necessitatibus ratione aliquam ea odit commodi aspernatur.\",\r\n};\r\nexport default AccordionItem;\r\n","\nimport AccordionItem from \"./components/AccordionItem/AccordionItem\";\nimport { content2, content3, content4, content5 } from \"./components/Contents/contents\";\nimport { title2, title3, title4, title5 } from \"./components/Titles/titles\";\n\nconst App = () => {\n  return (\n    <>\n      <h1>FAQ</h1>\n      <div className=\"accordion\">\n        <AccordionItem />\n        <AccordionItem title={title2} content={content2} />\n        <AccordionItem title={title3} content={content3} />\n        <AccordionItem title={title4} content={content4} />\n        <AccordionItem title={title5} content={content5} />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","export const title2 = \"What is HTML?\"\r\nexport const title3 = \"What is Javascript?\"\r\nexport const title4 = \"What is React?\"\r\nexport const title5 = \"What is Node.js?\"\r\n","export const content2 = \"Hypertext Markup Language (HTML) is the standard markup language for documents designed to be displayed in a web browser. It can be assisted by technologies such as Cascading Style Sheets (CSS) and scripting languages such as JavaScript.Web browsers receive HTML documents from a web server or from local storage and render the documents into multimedia web pages. HTML describes the structure of a web page semantically and originally included cues for the appearance of the document.\"\r\n\r\nexport const content3 = \"JavaScript is a scripting or programming language that allows you to implement complex features on web pages — every time a web page does more than just sit there and display static information for you to look at — displaying timely content updates, interactive maps, animated 2D/3D graphics, scrolling video jukeboxes, etc. — you can bet that JavaScript is probably involved.\"\r\n\r\nexport const content4 = \"React is a JavaScript library, and so we’ll assume you have a basic understanding of the JavaScript language. If you don’t feel very confident, we recommend going through a JavaScript tutorial to check your knowledge level and enable you to follow along this guide without getting lost. It might take you between 30 minutes and an hour, but as a result you won’t have to feel like you’re learning both React and JavaScript at the same time.\"\r\n\r\nexport const content5 = \"Node.js is a server-side JavaScript run-time environment. It's open-source, including Google's V8 engine, libuv for cross-platform compatibility, and a core library. Notably, Node.js does not expose a global window object, since it does not run within a browser.\"\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}